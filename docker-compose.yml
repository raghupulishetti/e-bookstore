version: "3.4"

services:


  # Database
  # ebookstore-db:
  #   image: mysql:5.7
  #   container_name: ebookstore-db
  #   hostname: ebookstore-db
  #   restart: always
  #   environment:
  #     MYSQL_USER: 'ebookstore'
  #     MYSQL_PASSWORD: 'root'
  #     MYSQL_ROOT_PASSWORD: 'root'
  #   ports:
  #     - "3307:3306"
  #   expose:
  #     - "3307"
  #   volumes:
  #     - bookstore-db-volume:/var/lib/mysql
  #   networks:
  #     - ebookstore-network

  # Core services

  discovery-service:
    build:
      context: ./discovery-service
      args:
        JAR_FILE: discovery-service-0.0.1-SNAPSHOT.jar
    container_name: discovery-service
    image: discovery-service
    hostname: discovery-service
    ports:
      - 8761:8761
    networks:
      - ebookstore-network

  gateway-service:
    build:
      context: ./gateway-service
      args:
        JAR_FILE: gateway-service-0.0.1-SNAPSHOT.jar
    container_name: gateway-service
    image: gateway-service
    hostname: gateway-service
    ports:
      - 8765:8765
    networks:
      - ebookstore-network
    depends_on:
      - discovery-service

  cloud-config-service:
    build:
      context: ./cloud-config-service
      args:
        JAR_FILE: cloud-config-service-0.0.1-SNAPSHOT.jar
    container_name: cloud-config-service
    image: cloud-config-service
    hostname: cloud-config-service
    ports:
      - 8888:8888
    networks:
      - ebookstore-network
    depends_on:
      - discovery-service



  product-service:
    build:
      context: ./product-service
      args:
        JAR_FILE: product-service-0.0.1-SNAPSHOT.jar
    container_name: product-service
    image: product-service
    hostname: product-service
    ports:
      - 9001:9001
    extra_hosts:
      - "host.docker.internal:192.168.1.38"
    networks:
      - ebookstore-network
    depends_on:
      - discovery-service

#volumes:
  #bookstore-db-volume:

networks:
  ebookstore-network:
    driver: bridge

